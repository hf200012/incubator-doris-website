(window.webpackJsonp=window.webpackJsonp||[]).push([[791],{1244:function(t,s,n){"use strict";n.r(s);var a=n(56),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"回归测试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#回归测试"}},[t._v("#")]),t._v(" 回归测试")]),t._v(" "),n("h2",{attrs:{id:"概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),n("ol",[n("li",[n("code",[t._v("Suite")]),t._v(": 一个测试用例，目前仅用来指代测试用例文件名")]),t._v(" "),n("li",[n("code",[t._v("Group")]),t._v(": 一个测试集，目前仅用于指代测试用例所属的目录")]),t._v(" "),n("li",[n("code",[t._v("Action")]),t._v(": 一个封装好的具体测试行为，比如用于执行sql的"),n("code",[t._v("sql")]),t._v(" Action，用于校验结果的"),n("code",[t._v("test")]),t._v(" Action，用于导入数据的"),n("code",[t._v("streamLoad")]),t._v(" Action等")])]),t._v(" "),n("h2",{attrs:{id:"测试步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试步骤"}},[t._v("#")]),t._v(" 测试步骤")]),t._v(" "),n("ol",[n("li",[t._v("需要预先安装好集群")]),t._v(" "),n("li",[t._v("修改配置文件"),n("code",[t._v("${DORIS_HOME}/conf/regression-conf.groovy")]),t._v("，设置jdbc url、用户等配置项")]),t._v(" "),n("li",[t._v("创建测试用例文件并编写用例")]),t._v(" "),n("li",[t._v("如果用例文件包含"),n("code",[t._v("qt")]),t._v(" Action，则需要创建关联的的data文件，比如"),n("code",[t._v("suites/demo/qt_action.groovy")]),t._v("这个例子，需要用到"),n("code",[t._v("data/demo/qt_action.out")]),t._v("这个TSV文件来校验输出是否一致")]),t._v(" "),n("li",[t._v("运行"),n("code",[t._v("${DORIS_HOME}/run-regression-test.sh")]),t._v("测试全部用例,或运行"),n("code",[t._v("${DORIS_HOME}/run-regression-test.sh --run <suiteName>")]),t._v(' 测试若干用例，更多例子见"启动脚本例子"章节')])]),t._v(" "),n("h2",{attrs:{id:"目录结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[t._v("#")]),t._v(" 目录结构")]),t._v(" "),n("p",[t._v("开发时需要关注的重要文件/目录")]),t._v(" "),n("ol",[n("li",[n("code",[t._v("run-regression-test.sh")]),t._v(": 启动脚本")]),t._v(" "),n("li",[n("code",[t._v("regression-conf.groovy")]),t._v(": 回归测试的默认配置")]),t._v(" "),n("li",[n("code",[t._v("data")]),t._v(": 存放输入数据和输出校验数据")]),t._v(" "),n("li",[n("code",[t._v("suites")]),t._v(": 存放用例")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("./${DORIS_HOME}\n    |-- **run-regression-test.sh**           回归测试启动脚本\n    |-- regression-test\n    |   |-- conf\n    |   |   |-- logback.xml                  日志配置文件\n    |   |   |-- **regression-conf.groovy**   默认配置文件\n    |   |\n    |   |-- framework                        回归测试框架源码\n    |   |-- **data**                         用例的输入输出文件\n    |   |   |-- demo                         存放demo的输入输出文件\n    |   |   |-- correctness                  存放正确性测试用例的输入输出文件\n    |   |   |-- performance                  存放性能测试用例的输入输出文件\n    |   |   |-- utils                        存放其他工具的输入输出文件\n    |   |\n    |   |-- **suites**                       回归测试用例\n    |       |-- demo                         存放测试用例的demo\n    |       |-- correctness                  存放正确性测试用例\n    |       |-- performance                  存放性能测试用例\n    |       |-- utils                        其他工具\n    |\n    |-- output\n        |-- regression-test\n            |-- log                          回归测试日志\n")])])]),n("h2",{attrs:{id:"框架默认配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#框架默认配置"}},[t._v("#")]),t._v(" 框架默认配置")]),t._v(" "),n("p",[t._v("测试时需要实际情况修改jdbc和fe的配置")]),t._v(" "),n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ============ 一般只需要关注下面这部分 ============ */")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认DB,如果未创建,则会尝试创建这个db")]),t._v("\ndefaultDb "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"regression_test"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Jdbc配置")]),t._v("\njdbcUrl "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"jdbc:mysql://127.0.0.1:9030/?"')]),t._v("\njdbcUser "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"root"')]),t._v("\njdbcPassword "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('""')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fe地址配置, 用于stream load")]),t._v("\nfeHttpAddress "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"127.0.0.1:8030"')]),t._v("\nfeHttpUser "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"root"')]),t._v("\nfeHttpPassword "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('""')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ============ 一般不需要修改下面的部分 ============ */")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DORIS_HOME变量是通过run-regression-test.sh传入的")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 即 java -DDORIS_HOME=./")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置回归测试用例的目录")]),t._v("\nsuitePath "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"'),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("DORIS_HOME"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('/regression-test/suites"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置输入输出数据的目录")]),t._v("\ndataPath "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"'),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("DORIS_HOME"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('/regression-test/data"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 默认会读所有的组,读多个组可以用半角逗号隔开，如: "demo,performance"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一般不需要在配置文件中修改，而是通过run-regression-test.sh来动态指定和覆盖")]),t._v("\ntestGroups "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('""')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认会读所有的用例, 同样可以使用run-regression-test.sh来动态指定和覆盖")]),t._v("\ntestSuites "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('""')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 其他自定义配置")]),t._v("\ncustomConf1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"test_custom_conf_value"')]),t._v("\n")])])]),n("h2",{attrs:{id:"编写用例的步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编写用例的步骤"}},[t._v("#")]),t._v(" 编写用例的步骤")]),t._v(" "),n("ol",[n("li",[t._v("进入"),n("code",[t._v("${DORIS_HOME}/regression-test")]),t._v("目录")]),t._v(" "),n("li",[t._v("根据测试的目的来选择用例的目录，正确性测试存在"),n("code",[t._v("suites/correctness")]),t._v("，而性能测试存在"),n("code",[t._v("suites/performance")])]),t._v(" "),n("li",[t._v("新建一个groovy用例文件，增加若干"),n("code",[t._v("Action")]),t._v("用于测试，Action讲在后续章节具体说明")])]),t._v(" "),n("h2",{attrs:{id:"action"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#action"}},[t._v("#")]),t._v(" Action")]),t._v(" "),n("p",[t._v("Action是一个测试框架默认提供的测试行为，使用DSL来定义。")]),t._v(" "),n("h3",{attrs:{id:"sql-action"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sql-action"}},[t._v("#")]),t._v(" sql action")]),t._v(" "),n("p",[t._v("sql action用于提交sql并获取结果，如果查询失败则会抛出异常")]),t._v(" "),n("p",[t._v("参数如下")]),t._v(" "),n("ul",[n("li",[t._v("String sql: 输入的sql字符串")]),t._v(" "),n("li",[t._v("return List<List"),n("Object",[t._v(">: 查询结果，如果是DDL/DML，则返回一行一列，唯一的值是updateRowCount")])],1)]),t._v(" "),n("p",[t._v("下面的样例代码存放于"),n("code",[t._v("${DORIS_HOME}/regression-test/suites/demo/sql_action.groovy")]),t._v(":")]),t._v(" "),n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// execute sql and ignore result")]),t._v("\nsql "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"show databases"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// execute sql and get result, outer List denote rows, inner List denote columns in a single row")]),t._v("\nList"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("List"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" tables "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sql "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"show tables"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// assertXxx() will invoke junit5's Assertions.assertXxx() dynamically")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertTrue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tables"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test rowCount >= 0")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// syntax error")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sql "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"a b c d e"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IllegalStateException")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"Should be syntax error"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sql"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SQLException t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertTrue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" testTable "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"test_sql_action1"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sql "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"DROP TABLE IF EXISTS '),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("testTable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// multi-line sql")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" result1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sql "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"""\n                        CREATE TABLE IF NOT EXISTS '),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("testTable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(' (\n                            id int\n                        )\n                        DISTRIBUTED BY HASH(id) BUCKETS 1\n                        PROPERTIES (\n                          "replication_num" = "1"\n                        ) \n                        """')]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DDL/DML return 1 row and 1 column, the only value is update row count")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertTrue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertTrue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertTrue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"Create table should update 0 rows"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" result2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sql "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"INSERT INTO test_sql_action1 values(1), (2), (3)"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertTrue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertTrue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertTrue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"Insert should update 3 rows"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * try_xxx(args) means:\n     *\n     * try {\n     *    return xxx(args)\n     * } catch (Throwable t) {\n     *     // do nothing\n     * }\n     */")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("try_sql")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"DROP TABLE IF EXISTS '),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("testTable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// you can see the error sql will not throw exception and return")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" errorSqlResult "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("try_sql")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"a b c d e f g"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertTrue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("errorSqlResult "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Throwable t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertTrue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"Never catch exception"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order_sql(sqlStr) equals to sql(sqlStr, isOrder=true)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sort result by string dict")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" list "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" order_sql "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"""\n                select 2\n                union all\n                select 1\n                union all\n                select null\n                union all\n                select 15\n                union all\n                select 3\n                """')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertEquals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertEquals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertEquals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertEquals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertEquals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"qt-action"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#qt-action"}},[t._v("#")]),t._v(" qt action")]),t._v(" "),n("p",[t._v("qt action用于提交sql，并使用对应的.out TSV文件来校验结果")]),t._v(" "),n("ul",[n("li",[t._v("String sql: 输入sql字符串")]),t._v(" "),n("li",[t._v("return void")])]),t._v(" "),n("p",[t._v("下面的样例代码存放于"),n("code",[t._v("${DORIS_HOME}/regression-test/suites/demo/qt_action.groovy")]),t._v(":")]),t._v(" "),n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * qt_xxx sql equals to quickTest(xxx, sql) witch xxx is tag.\n * the result will be compare to the relate file: ${DORIS_HOME}/regression_test/data/qt_action.out.\n *\n * if you want to generate .out tsv file for real execute result. you can run with -genOut or -forceGenOut option.\n * e.g\n *   ${DORIS_HOME}/run-regression-test.sh --run qt_action -genOut\n *   ${DORIS_HOME}/run-regression-test.sh --run qt_action -forceGenOut\n */")]),t._v("\nqt_select "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v("\"select 1, 'beijing' union all select 2, 'shanghai'\"")]),t._v("\n\nqt_select2 "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"select 2"')]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order result by string dict then compare to .out file.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// order_qt_xxx sql equals to quickTest(xxx, sql, true).")]),t._v("\norder_qt_union_all  "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"""\n                select 2\n                union all\n                select 1\n                union all\n                select null\n                union all\n                select 15\n                union all\n                select 3\n                """')]),t._v("\n")])])]),n("h3",{attrs:{id:"test-action"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#test-action"}},[t._v("#")]),t._v(" test action")]),t._v(" "),n("p",[t._v("test action可以使用更复杂的校验规则来测试，比如验证行数、执行时间、是否抛出异常")]),t._v(" "),n("p",[t._v("可用参数")]),t._v(" "),n("ul",[n("li",[t._v("String sql: 输入的sql字符串")]),t._v(" "),n("li",[t._v("List<List"),n("Object",[t._v("> result: 提供一个List对象，用于校验真实查询结果对比是否相等")])],1),t._v(" "),n("li",[t._v("String exception: 校验抛出的异常是否包含某些字符串")]),t._v(" "),n("li",[t._v("long rowNum: 验证结果行数")]),t._v(" "),n("li",[t._v("long time: 验证执行时间是否小于这个值，单位是毫秒")]),t._v(" "),n("li",[t._v("Closure<List<List"),n("Object",[t._v(">, Throwable, Long, Long> check: 自定义回调校验，可传入结果、异常、时间。存在回调函数时，其他校验方式会失效。")])],1)]),t._v(" "),n("p",[t._v("下面的样例代码存放于"),n("code",[t._v("${DORIS_HOME}/regression-test/suites/demo/qt_action.groovy")]),t._v(":")]),t._v(" "),n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[t._v("test "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sql "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"abcdefg"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// check exception message contains")]),t._v("\n    exception "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"errCode = 2, detailMessage = Syntax error"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ntest "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sql "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"""\n            select *\n            from (\n                select 1 id\n                union all\n                select 2\n            ) a\n            order by id"""')]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// multi check condition")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// check return 2 rows")]),t._v("\n    rowNum "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// execute time must <= 5000 millisecond")]),t._v("\n    time "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// check result, must be 2 rows and 1 column, the first row is 1, second is 2")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("result")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ntest "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sql "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"a b c d e f g"')]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// other check will not work because already declared a check callback")]),t._v("\n    exception "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"aaaaaaaaa"')]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// callback")]),t._v("\n    check "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" startTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" endTime "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// assertXxx() will invoke junit5's Assertions.assertXxx() dynamically")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertTrue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exception "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ntest "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sql  "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"""\n                select 2\n                union all\n                select 1\n                union all\n                select null\n                union all\n                select 15\n                union all\n                select 3\n                """')]),t._v("\n\n    check "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" startTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" endTime "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// same as order_sql(sqlStr)")]),t._v("\n        result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sortRows")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertEquals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertEquals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertEquals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertEquals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertEquals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"explain-action"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#explain-action"}},[t._v("#")]),t._v(" explain action")]),t._v(" "),n("p",[t._v("explain action用来校验explain返回的字符串是否包含某些字符串")]),t._v(" "),n("p",[t._v("可用参数:")]),t._v(" "),n("ul",[n("li",[t._v("String sql: 查询的sql，需要去掉sql中的explain")]),t._v(" "),n("li",[t._v("String contains: 校验explain是否包含某些字符串，可多次调用校验同时多个结果")]),t._v(" "),n("li",[t._v("String notContains: 校验explain是否不含某些字符串，可多次调用校验同时多个结果")]),t._v(" "),n("li",[t._v("Closure"),n("String",[t._v(" check: 自定义校验回调函数，可以获取返回的字符串，存在校验函数时，其他校验方式会失效")])],1),t._v(" "),n("li",[t._v("Closure<String, Throwable, Long, Long> check: 自定义校验回调函数，可以额外获取异常和时间")])]),t._v(" "),n("p",[t._v("下面的样例代码存放于"),n("code",[t._v("${DORIS_HOME}/regression-test/suites/demo/explain_action.groovy")]),t._v(":")]),t._v(" "),n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[t._v("explain "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sql")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"select 100"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// contains("OUTPUT EXPRS:<slot 0> 100\\n") && contains("PARTITION: UNPARTITIONED\\n")')]),t._v("\n    contains "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"OUTPUT EXPRS:<slot 0> 100\\n"')]),t._v("\n    contains "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"PARTITION: UNPARTITIONED\\n"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nexplain "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sql")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"select 100"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// contains(" 100\\n") && !contains("abcdefg") && !("1234567")')]),t._v("\n    contains "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('" 100\\n"')]),t._v("\n    notContains "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"abcdefg"')]),t._v("\n    notContains "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"1234567"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nexplain "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sql")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"select 100"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// simple callback")]),t._v("\n    check "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" explainStr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" explainStr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"abcdefg"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" explainStr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('" 100\\n"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nexplain "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sql")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"a b c d e"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// callback with exception and time")]),t._v("\n    check "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" explainStr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" startTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" endTime "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// assertXxx() will invoke junit5's Assertions.assertXxx() dynamically")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertTrue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exception "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"streamload-action"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#streamload-action"}},[t._v("#")]),t._v(" streamLoad action")]),t._v(" "),n("p",[t._v("streamLoad action用于导入数据\n可用参数为")]),t._v(" "),n("ul",[n("li",[t._v("String db: db，默认值为regression-conf.groovy中的defaultDb")]),t._v(" "),n("li",[t._v("String table: 表名")]),t._v(" "),n("li",[t._v("String file: 要导入的文件路径，可以写data目录下的相对路径，或者写http url来导入网络文件")]),t._v(" "),n("li",[t._v("Iterator<List"),n("Object",[t._v("> inputIterator: 要导入的迭代器")])],1),t._v(" "),n("li",[t._v("String inputText: 要导入的文本, 较为少用")]),t._v(" "),n("li",[t._v("InputStream inputStream: 要导入的字节流，较为少用")]),t._v(" "),n("li",[t._v("long time: 验证执行时间是否小于这个值，单位是毫秒")]),t._v(" "),n("li",[t._v("void set(String key, String value): 设置stream load的http请求的header，如label、columnSeparator")]),t._v(" "),n("li",[t._v("Closure<String, Throwable, Long, Long> check: 自定义校验回调函数，可以获取返回结果、异常和超时时间。当存在回调函数时，其他校验项会失效。")])]),t._v(" "),n("p",[t._v("下面的样例代码存放于"),n("code",[t._v("${DORIS_HOME}/regression-test/suites/demo/streamLoad_action.groovy")]),t._v(":")]),t._v(" "),n("div",{staticClass:"language-groovy extra-class"},[n("pre",{pre:!0,attrs:{class:"language-groovy"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" tableName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"test_streamload_action1"')]),t._v("\n\nsql "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"""\n    CREATE TABLE IF NOT EXISTS '),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("tableName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v(' (\n        id int,\n        name varchar(255)\n    )\n    DISTRIBUTED BY HASH(id) BUCKETS 1\n    PROPERTIES (\n      "replication_num" = "1"\n    ) \n"""')]),t._v("\n\nstreamLoad "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// you can skip declare db, because a default db already specify in ${DORIS_HOME}/conf/regression-conf.groovy")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// db 'regression_test'")]),t._v("\n    table tableName\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// default label is UUID:")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// set 'label' UUID.randomUUID().toString()")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// default column_separator is specify in doris fe config, usually is '\\t'.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this line change to ','")]),t._v("\n    set "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'column_separator'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// relate to ${DORIS_HOME}/regression-test/data/demo/streamload_input.csv.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// also, you can stream load a http stream, e.g. http://xxx/some.csv")]),t._v("\n    file "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'streamload_input.csv'")]),t._v("\n\n    time "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// limit inflight 10s")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// stream load action will check result, include Success status, and NumberTotalRows == NumberLoadedRows")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// stream load 100 rows")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" rowCount "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" rowIt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" java"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stream"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LongStream"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rowCount"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [0, rowCount)")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapToObj")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"a_"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// change Long to List<Long, String>")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterator")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nstreamLoad "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    table tableName\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// also, you can upload a memory iterator")]),t._v("\n    inputIterator rowIt\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if declared a check callback, the default check condition will ignore.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// So you must check all condition")]),t._v("\n    check "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exception"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" startTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" endTime "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exception "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" null"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" exception\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        log"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"Stream load result: '),n("span",{pre:!0,attrs:{class:"token expression"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),t._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" json "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseJson")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertEquals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"success"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" json"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Status"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertEquals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("json"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NumberTotalRows"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" json"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NumberLoadedRows"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assertTrue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("json"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("NumberLoadedRows "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" json"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LoadBytes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"启动脚本例子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启动脚本例子"}},[t._v("#")]),t._v(" 启动脚本例子")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看脚本参数说明")]),t._v("\n./run-regression-test.sh h\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看框架参数说明")]),t._v("\n./run-regression-test.sh --run -h\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 测试所有用例")]),t._v("\n./run-regression-test.sh \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除测试框架编译结果和测试日志")]),t._v("\n./run-regression-test.sh --clean\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 测试suiteName为sql_action的用例, 目前suiteName等于文件名前缀，例子对应的用例文件是sql_action.groovy")]),t._v("\n./run-regression-test.sh --run sql_action \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 测试suiteName包含'sql'的用例，**注意需要用单引号括起来**")]),t._v("\n./run-regression-test.sh --run "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*sql*'")]),t._v(" \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 测试demo和perfomance group")]),t._v("\n./run-regression-test.sh --run -g "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'demo,performance'")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 测试demo group下的sql_action")]),t._v("\n./run-regression-test.sh --run -g demo -s sql_action\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自定义配置")]),t._v("\n./run-regression-test.sh --run -conf "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("a")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("b\n")])])]),n("h2",{attrs:{id:"使用查询结果自动生成-out文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用查询结果自动生成-out文件"}},[t._v("#")]),t._v(" 使用查询结果自动生成.out文件")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用查询结果自动生成sql_action用例的.out文件，如果.out文件存在则忽略")]),t._v("\n./run-regression-test.sh --run sql_action -genOut\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用查询结果自动生成sql_action用例的.out文件，如果.out文件存在则覆盖")]),t._v("\n./run-regression-test.sh --run sql_action -forceGenOut\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);