(window.webpackJsonp=window.webpackJsonp||[]).push([[499],{952:function(a,t,e){"use strict";e.r(t);var n=e(56),s=Object(n.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"admin-clean-trash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#admin-clean-trash"}},[a._v("#")]),a._v(" ADMIN CLEAN TRASH")]),a._v(" "),e("h2",{attrs:{id:"description"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#description"}},[a._v("#")]),a._v(" description")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v('This statement is used to clean up the trash data in the backend. \nGrammar:\n    ADMIN CLEAN TRASH [ON ("BackendHost1:BackendHeartBeatPort1", "BackendHost2:BackendHeartBeatPort2", ...)];\n\nExplain:\n    Take BackendHost:BackendHeartBeatPort to indicate the backend that needs to be cleaned up, and clean up all backends without adding the on limit. \n')])])]),e("h2",{attrs:{id:"example"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[a._v("#")]),a._v(" example")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("1. Clean up the trash data of all be nodes. \n\n    ADMIN CLEAN TRASH;\n\n2. Clean up the trash data of '192.168.0.1:9050' and '192.168.0.2:9050'. \n\n    ADMIN CLEAN TRASH ON (\"192.168.0.1:9050\",\"192.168.0.2:9050\");\n")])])]),e("h2",{attrs:{id:"keyword"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keyword"}},[a._v("#")]),a._v(" keyword")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[a._v("ADMIN, CLEAN, TRASH\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);